@use "../abstracts/variables" as var;
@use "../abstracts/mixins" as mix;
@use "../abstracts/breakpoints" as breakpoint;
@use "../abstracts/animations" as anim;
@use "sass:math";

.cards-section {
  @extend %container-big;
  background-color: var.$background-color-base;

  .wrapper {
    @include mix.wrap(80%);
  }

  //outer container layout
  .outer-container {
    @include mix.flex(column, flex-start, center);
    background-color: var.$background-color-primary;
    min-height: 100vh;
    width: 100%;
    border-radius: var.$border-radius-big;
  }

  //cards container layout
  .cards-container {
    @include mix.flex(row, center, stretch);
    background-color: var.$background-color-base;
    box-shadow: var.$box-shadow-base;
    flex: 1;
    border-radius: var.$border-radius-big;

    @include breakpoint.tablet {
      flex-direction: column;
      width: 100%;
      gap: var.$gutter-big;
    }
  }

  //cards design
  .card {
    @include anim.appear;
    @include mix.flex(column, center, center);
    padding: var.$gutter-base;
    border-radius: var.$border-radius-big;
    color: var.$text-color-primary;
    position: relative;
    transition: all 0.3s ease-in;

    &:hover {
      background: var.$linear-gradient-primary;
      color: var.$text-color-base;
    }

    i {
      font-size: var.$heading-size-bigger;
      margin-block: var.$gutter-medium;

      @include breakpoint.tablet {
        margin-top: var.$gutter-base;
      }
    }

    .divider-line {
      border-bottom: 1px solid var.$background-color-secondary;
      width: 50%;
      margin-bottom: var.$gutter-medium;
    }

    p {
      text-align: center;
      margin-bottom: 0;
    }

    .number-tag p {
      color: var.$text-color-base;
      font-size: var.$heading-size-tiny;
      font-weight: var.$font-weight-bold;
    }

    &:nth-of-type(1) .number-tag {
      @include mix.number-tag(var.$linear-gradient-base);
    }
    &:nth-of-type(2) .number-tag {
      @include mix.number-tag(var.$linear-gradient-primary);
    }
    &:nth-of-type(3) .number-tag {
      @include mix.number-tag(var.$linear-gradient-secondary);
    }
    &:nth-of-type(4) .number-tag {
      @include mix.number-tag(var.$linear-gradient-tertiary);
    }
  }

  //progress bar design
  .progress-bar-big-container {
    @include mix.flex(row, center, center, var.$gutter-base, wrap);
    flex: 1;
    width: 100%;

    @include breakpoint.tablet {
      padding-block: 30px;
    }

    @include breakpoint.mobile-l {
      flex-direction: column;
    }

    .progress-bar-small-container {
      @include anim.appear;
      @include mix.flex(row, center, center);
      flex-basis: calc(25% - var.$gutter-base);
      padding: var.$gutter-medium;

      @include breakpoint.tablet {
        flex-basis: calc(50% - var.$gutter-base);
      }

      &:nth-of-type(1) .progress-bar-outer {
        @include mix.progress(80%);
      }

      &:nth-of-type(2) .progress-bar-outer {
        @include mix.progress(60%);
      }

      &:nth-of-type(3) .progress-bar-outer {
        @include mix.progress(90%);
      }

      &:nth-of-type(4) .progress-bar-outer {
        @include mix.progress(70%);
      }
    }

    .progress-bar-outer {
      @include mix.flex(row, center, center);
    }

    .progress-bar-inner {
      @include mix.flex(column, center, center);
      background-color: var.$background-color-primary;
      border-radius: var.$border-radius-circle;
      width: 160px;
      height: 160px;
    }

    .percentage {
      font-size: var.$heading-size-small;
      font-weight: var.$font-weight-bold;
      margin-bottom: 0;
    }

    .skill {
      font-weight: var.$font-weight-bold;
      margin-bottom: 0;
    }
  }
}
